{"version":3,"file":"static/js/692.f28cd5ce.chunk.js","mappings":"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","sources":["Components/Register.js"],"sourcesContent":["import { useState } from \"react\";\nimport { register } from \"../Services/Index\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction Register() {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [phone, setPhone] = useState('')\n    const [gender, setGender] = useState('')\n    const [error, setError] = useState('')\n    const [success, setSuccess] = useState('')\n    const [formErrors, setFormErrors] = useState({})\n\n    const navigate = useNavigate();\n\n    const validateForm = () => {\n        let errors = {}\n        if (!name.trim()) {\n            errors.name = \"Username is required\"\n        }\n        if (!email.trim()) {\n            errors.email = \"Email is required\"\n        } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n            errors.email = \"Email is invalid\"\n        }\n        if (!password) {\n            errors.password = \"Password is required\"\n        } else if (password.length < 6) {\n            errors.password = \"Password must be at least 6 characters\"\n        }\n        if (!phone.trim()) {\n            errors.phone = \"Phone number is required\"\n        } else if (!/^\\d{10}$/.test(phone)) {\n            errors.phone = \"Phone number is invalid\"\n        }\n        if (!gender) {\n            errors.gender = \"Gender is required\"\n        }\n        setFormErrors(errors)\n        return Object.keys(errors).length === 0\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (validateForm()) {\n            const data = {\n                name: name,\n                email: email,\n                password: password,\n                phone: phone,\n                gender: gender\n            }\n            const response = await register(data);\n            console.log(response);\n            if (response.status === false) {\n                setError(response.message);\n            }\n            if (response.status === true) {\n                setSuccess(response.message);\n            }\n            setTimeout(() => {\n                if (response.status === true) {\n                    navigate('/')\n                }\n                setError('');\n                setSuccess('');\n            }, 3000);\n        }\n    }\n\n    const handleChange = (e) => {\n        let name = e.target.name;\n        let value = e.target.value;\n        if (name === 'name') {\n            setName(value);\n        }\n        if (name === 'email') {\n            setEmail(value);\n        }\n        if (name === 'password') {\n            setPassword(value);\n        }\n        if (name === 'phone') {\n            setPhone(value);\n        }\n        if (name === 'gender') {\n            setGender(value);\n        }\n        setFormErrors({...formErrors, [name]: ''})\n    }\n\n    return (\n        <div className=\"min-h-screen flex bg-gray-50\">\n\n            <div className=\"w-1/2 bg-cover bg-center\" style={{ backgroundImage: \"url('./background.jpeg')\" }}></div>\n            <div className=\"flex-1 flex items-center justify-center bg-gray-100\">\n                <div className=\"px-8 py-6 w-full max-w-md bg-white shadow-lg\">\n                    <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n                        Create your account\n                    </h2>\n\n                    <form className=\"\" action=\"#\" method=\"POST\" onSubmit={(e) => handleSubmit(e)}>\n                        <input type=\"hidden\" name=\"remember\" value=\"true\" />\n                        <div className=\"rounded-md shadow-sm -space-y-px\">\n                            <div className=\"py-2\">\n                                <label htmlFor=\"username\" className=\"sr-only\">Username</label>\n                                <input id=\"username\" value={name} onChange={(e) => handleChange(e)} name=\"name\" type=\"text\" className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Username\" />\n                                {formErrors.name && <p className=\"text-red-500 text-xs italic\">{formErrors.name}</p>}\n                            </div>\n                            <div className=\"py-2\">\n                                <label htmlFor=\"email-address\" className=\"sr-only\">Email address</label>\n                                <input id=\"email-address\" value={email} onChange={(e) => handleChange(e)} name=\"email\" type=\"email\" autoComplete=\"email\" className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Email address\" />\n                                {formErrors.email && <p className=\"text-red-500 text-xs italic\">{formErrors.email}</p>}\n                            </div>\n                            <div className=\"py-2\">\n                                <label htmlFor=\"phone\" className=\"sr-only\">Phone</label>\n                                <input id=\"phone\" name=\"phone\" value={phone} onChange={(e) => handleChange(e)} type=\"tel\" className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Phone number\" />\n                                {formErrors.phone && <p className=\"text-red-500 text-xs italic\">{formErrors.phone}</p>}\n                            </div>\n                            <div className=\"py-2\">\n                                <label htmlFor=\"password\" className=\"sr-only\">Password</label>\n                                <input id=\"password\" name=\"password\" value={password} onChange={(e) => handleChange(e)} type=\"password\" autoComplete=\"new-password\" className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Password\" />\n                                {formErrors.password && <p className=\"text-red-500 text-xs italic\">{formErrors.password}</p>}\n                            </div>\n                            <div className=\"py-2\">\n                                <label htmlFor=\"gender\" className=\"sr-only\">Gender</label>\n                                <select id=\"gender\" name=\"gender\" value={gender} onChange={(e) => handleChange(e)} className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\">\n                                    <option value=\"\">Select Gender</option>\n                                    <option value=\"male\">Male</option>\n                                    <option value=\"female\">Female</option>\n                                    <option value=\"other\">Other</option>\n                                </select>\n                                {formErrors.gender && <p className=\"text-red-500 text-xs italic\">{formErrors.gender}</p>}\n                            </div>\n                        </div>\n                        {success ?\n                            <div class=\"p-4 mb-4 text-sm text-green-800 rounded-lg bg-green-50 dark:bg-gray-800 dark:text-green-400\" role=\"alert\">\n                                <span class=\"font-medium\">{success}</span>\n                            </div>\n                            :\n                            ''\n                        }\n                        {error ?\n                            <div class=\"p-4 mb-4 text-sm text-red-800 rounded-lg bg-red-50 dark:bg-gray-800 dark:text-red-400\" role=\"alert\">\n                                <span class=\"font-medium\">{error}</span>\n                            </div>\n                            :\n                            ''\n\n                        }\n\n                        <div>\n                            <button type=\"submit\" className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n                                Register\n                            </button>\n                        </div>\n                        <div className=\"text-center mt-6\">\n                            <p className=\"text-sm text-gray-600\">\n                                Already have an account? <a href=\"/\" className=\"font-medium text-indigo-600 hover:text-indigo-700\">Login</a>\n                            </p>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Register;"],"names":["name","setName","useState","email","setEmail","password","setPassword","phone","setPhone","gender","setGender","error","setError","success","setSuccess","formErrors","setFormErrors","navigate","useNavigate","handleSubmit","async","e","preventDefault","validateForm","errors","trim","test","length","Object","keys","data","response","register","console","log","status","message","setTimeout","handleChange","target","value","_jsxs","className","children","_jsx","style","backgroundImage","action","method","onSubmit","type","htmlFor","id","onChange","placeholder","autoComplete","class","role","href"],"sourceRoot":""}