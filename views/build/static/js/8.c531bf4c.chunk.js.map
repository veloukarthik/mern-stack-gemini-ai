{"version":3,"file":"static/js/8.c531bf4c.chunk.js","mappings":"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","sources":["Components/PromptResponse.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getPrompts, getPromtResponse, createPrompt } from '../Services/Index';\nimport { useParams, Link, useLocation, useNavigate } from 'react-router-dom';\nimport Prompts from './Prompts';\nimport Markdown from 'markdown-to-jsx';\nfunction PromptsResponse() {\n    const [prompts, setPrompts] = useState([]);\n    const [input, setInput] = useState('');\n    const [response, setResponse] = useState([]);\n    const location = useLocation();\n    const { id } = useParams();\n    const navigate = useNavigate();\n    const [isMenuOpen, setIsMenuOpen] = useState(false)\n    const [button,setButton] = useState('Send')\n   \n    const name =  localStorage.getItem('user');\n    useEffect(() => {\n        setInput('');\n        getItems();\n        getResponse();\n        \n    }, [location]);\n\n    const getResponse = async () => {\n        if (id) {\n            const data = await getPromtResponse(id);\n            getItems();\n            setResponse(data.promptResponse);\n            // Scroll to the bottom of the page after the response is set\n            setTimeout(() => {\n                window.scrollTo({\n                  top: document.body.scrollHeight, // Scroll to the bottom\n                  behavior: 'smooth',              // Smooth scrolling effect\n                });\n              }, 100); \n        }\n        else {\n            setResponse([]);\n        }\n    }\n\n    const getItems = () => {\n          getPrompts().then((data) => {\n              if(data && data.prompts)\n              {\n                let results =  data.prompts.filter((val) => val._id == id ? val : null);\n                document.title = results.length > 0 ? results[0].prompt : 'Gemini AI';\n              }\n              setPrompts(data.prompts);\n          });\n    }\n\n\n\n    const handleSubmit = (e) => {\n        // e.preventDefault();\n        let data = {};\n        if (id) {\n            data.promptId = id;\n            data.subprompt = input;\n        }\n        else {\n            data.prompt = input;\n            data.subprompt = '';\n        }\n        setButton('Sending...');\n        setInput('');\n        createPrompt(data).then((data) => {\n            setInput('');\n            if (id) {\n                getResponse();\n                setButton('Send');\n                setInput('');\n            }\n            else {\n                if(data)\n                {\n                    setButton('Send');\n                    setInput('');\n                    navigate(\"/p/\" + data.promptResponse.prompt_id);\n                }\n                \n                //  Navigate(\"/p/\" + data.promptResponse.prompt_id);\n            }\n\n        });\n    };\n\n    const handleLogout = () => {\n        localStorage.removeItem('token');\n        window.location.href = \"/\";\n    }\n\n    return (\n        <div className=\"h-screen flex\">\n            <Prompts changes={response} />\n\n            <div className=\"flex-1 flex flex-col\">\n                <header className=\"bg-white shadow p-4\">\n                    <h1 className=\"text-2xl font-semibold flex justify-between items-center\">\n                        <span>Gemini AI</span>\n                        <div className=\"relative inline-block text-right\">\n                            <div>\n                                <button\n                                    type=\"button\"\n                                    className=\"inline-flex uppercase justify-center rounded-full py-2 border border-gray-300 shadow-sm w-10 h-10 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-indigo-500\"\n                                    id=\"options-menu\"\n                                    aria-haspopup=\"true\"\n                                    aria-expanded=\"true\"\n                                    onClick={() => setIsMenuOpen(!isMenuOpen)}\n                                >\n                                   {name ? name.charAt(0) : ''}\n                                </button>\n                            </div>\n                            {isMenuOpen && (\n                                <div className=\"origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 divide-y divide-gray-100\" role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"options-menu\">\n                                    <div className=\"py-1\" role=\"none\">\n                                        <a href=\"#\" className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900\" role=\"menuitem\">My Account</a>\n                                        <a href=\"#\" onClick={() => handleLogout()} className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900\" role=\"menuitem\">Logout</a>\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n                    </h1>\n                </header>\n\n                <main className=\"flex-1 overflow-y-auto p-4\">\n                    <div className=\"bg-gray-50 p-6 rounded-lg shadow-md\">\n\n                        {response && response.map((response, index) => (\n                            <div className=\"space-y-4 w-full\" key={index}>\n                                <div className=\"flex justify-start w-full mt-3 mb-3\">\n                                    <div className=\"bg-gray-200 p-3 rounded-lg w-full\">\n                                        <p>{response.subprompt}</p>\n                                    </div>\n                                </div>\n                                <div className=\"flex justify-end w-full mt-3 mt-3\">\n                                    <div className=\"bg-gray-200 p-3 rounded-lg w-full text-conent\">\n                                        <Markdown>{response.response}</Markdown>\n                                    </div>\n                                </div>\n                            </div>\n                        ))}\n\n\n                    </div>\n                </main>\n\n                <footer className=\"p-4 bg-white border-t\">\n                    <div className=\"flex items-center\">\n                        <input onChange={(e) => setInput(e.target.value)} value={input} type=\"text\" placeholder=\"Type your message...\" className=\"flex-1 p-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\" />\n                        <button onClick={() => handleSubmit()} disabled={input ? false : true} className=\"ml-2 p-2 bg-blue-500 text-white rounded-lg\">\n                            {button}\n                        </button>\n                    </div>\n                </footer>\n            </div>\n        </div>\n    );\n}\n\nexport default PromptsResponse;"],"names":["prompts","setPrompts","useState","input","setInput","response","setResponse","location","useLocation","id","useParams","navigate","useNavigate","isMenuOpen","setIsMenuOpen","button","setButton","name","localStorage","getItem","useEffect","getItems","getResponse","async","data","getPromtResponse","promptResponse","setTimeout","window","scrollTo","top","document","body","scrollHeight","behavior","getPrompts","then","results","filter","val","_id","title","length","prompt","_jsxs","className","children","_jsx","Prompts","changes","type","onClick","charAt","role","href","removeItem","map","index","subprompt","Markdown","onChange","e","target","value","placeholder","promptId","createPrompt","prompt_id","handleSubmit","disabled"],"sourceRoot":""}